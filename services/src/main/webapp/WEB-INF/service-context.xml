<?xml version="1.0" encoding="UTF-8"?>
<!--

    Copyright 2008 The University of North Carolina at Chapel Hill

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

            http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->
<beans xmlns="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:jms="http://www.springframework.org/schema/jms"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/jms http://www.springframework.org/schema/jms/spring-jms-3.0.xsd
		http://www.springframework.org/schema/util 
		http://www.springframework.org/schema/util/spring-util.xsd">
	
	<bean name="propertiesURI" class="java.lang.System" factory-method="getProperty">
		<constructor-arg index="0" value="server.properties.uri"/>
		<!-- property name for properties URI location -->
		<constructor-arg index="1" value="classpath:server.properties"/>
		<!-- default location for testing -->
	</bean>
	<bean id="serverProperties"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<ref bean="propertiesURI"/>
				<value>classpath:cdr-services.properties</value>
				<value>classpath:scheduled-events.properties</value>
			</list>
		</property>
		<property name="ignoreResourceNotFound" value="false"/>
	</bean>
	
	<bean id="broker" class="org.apache.activemq.xbean.BrokerFactoryBean" destroy-method="destroy">
		<property name="config" value="file:${activemq.home}/activemq.xml" />
		<property name="start" value="true" />
	</bean>
	
	<bean class="org.springframework.web.context.support.ServletContextAttributeExporter">
		<property name="attributes">
			<map>
				<!-- inject the following beans into the servlet
					context so the servlets can access them. 
				<entry key="imageAccessService">
					<ref bean="imageAccessService"/>
				</entry>-->
				<entry key="accessClient">
					<ref bean="accessClient"/>
				</entry>
				<entry key="managementClient">
					<ref bean="managementClient"/>
				</entry>
				<entry key="irodsAccount">
					<ref bean="irodsAccount"/>
				</entry>
			</map>
		</property>
	</bean>

	<bean id="tripleStoreQueryService"
		class="edu.unc.lib.dl.util.TripleStoreQueryServiceMulgaraImpl" destroy-method="destroy">
		<property name="itqlEndpointURL" value="${mulgara.protocol}://${mulgara.host}${mulgara.port}/webservices/services/ItqlBeanService"/>
		<property name="sparqlEndpointURL" value="${mulgara.protocol}://${mulgara.host}${mulgara.port}/sparql/"/>
		<property name="serverModelUri" value="rmi://${mulgara.host}/server1#"/>
	</bean>
	<bean id="managementClient" class="edu.unc.lib.dl.fedora.ManagementClient"
		init-method="init">
		<property name="fedoraContextUrl"
			value="${fedora.protocol}://${fedora.host}${fedora.port}/${fedora.context}" />
		<property name="username" value="${fedora.admin.username}" />
		<property name="password" value="${fedora.admin.password}" />
	</bean>
	<bean id="accessClient" class="edu.unc.lib.dl.fedora.AccessClient" init-method="init">
		<property name="fedoraContextUrl" value="${fedora.protocol}://${fedora.host}${fedora.port}/${fedora.context}" />
		<property name="username" value="${fedora.admin.username}" />
		<property name="password" value="${fedora.admin.password}" />
	</bean>
	
	<bean id="fedoraDataService" class="edu.unc.lib.dl.fedora.FedoraDataService" init-method="init">
		<property name="accessClient" ref="accessClient"/>
		<property name="managementClient" ref="managementClient"/>
		<property name="tripleStoreQueryService" ref="tripleStoreQueryService"/>
		<property name="accessControlUtils" ref="accessControlUtils"/>
		<property name="maxThreads" value="${fedoraDataService.maxThreads}"/>
	</bean>
	
	<bean id="accessControlUtils" class="edu.unc.lib.dl.fedora.AccessControlUtils" init-method="initReadPermissionOnly">
		<property name="tripleStoreQueryService" ref="tripleStoreQueryService"/>
		<property name="cacheDepth" value="${access.cache.depth}"/>
		<property name="cacheLimit" value="${access.cache.limit}"/>
		<property name="accessControlProperties">
			<props>
				<prop key="http://cdr.unc.edu/definitions/roles#patron">permitMetadataRead permitOriginalsRead permitDerivativesRead</prop>
				<prop key="http://cdr.unc.edu/definitions/roles#noOriginalsPatron">permitMetadataRead permitDerivativesRead</prop>
				<prop key="http://cdr.unc.edu/definitions/roles#metadataOnlyPatron">permitMetadataRead</prop>
				<prop key="http://cdr.unc.edu/definitions/roles#curator">permitMetadataCreate permitMetadataRead permitMetadataUpdate permitOriginalsCreate permitOriginalsRead permitOriginalsUpdate permitDerivativesCreate permitDerivativesRead permitDerivativesUpdate</prop>
				<prop key="http://cdr.unc.edu/definitions/roles#admin">permitMetadataCreate permitMetadataRead permitMetadataUpdate permitMetadataDelete permitOriginalsCreate permitOriginalsRead permitOriginalsUpdate permitOriginalsDelete permitDerivativesCreate permitDerivativesRead permitDerivativesUpdate permitDerivativesDelete</prop>
			</props>
		</property>
	</bean>

	<bean id="irodsAccount" class="org.irods.jargon.core.connection.IRODSAccount">
		<constructor-arg value="${irods.host}"/>
		<constructor-arg value="${irods.port}" type="int"/>
		<constructor-arg value="${irods.services.username}"/>
		<constructor-arg value="${irods.services.password}"/>
		<constructor-arg value="/${irods.zone}/home/${irods.services.username}"/>
		<constructor-arg value="${irods.zone}"/>
		<constructor-arg value="${irods.default.resc}"/>
	</bean> 
	
	<bean id="irodsFileSystem" class="org.irods.jargon.core.pub.IRODSFileSystem" factory-method="instance"/>
	
	<!-- a pooling based JMS provider -->
	<bean id="jmsFactory" class="org.apache.activemq.pool.PooledConnectionFactory" destroy-method="stop">
		<property name="connectionFactory">
			<bean class="org.apache.activemq.ActiveMQConnectionFactory">
				<property name="brokerURL"> 
					<value>tcp://${jms.host}${jms.port}</value>
				</property>
			</bean>
		</property>
	</bean>
	
	<!-- and this is the message listener container-->
	<bean id="jmsContainer" class="org.springframework.jms.listener.DefaultMessageListenerContainer">
		<property name="connectionFactory" ref="jmsFactory"/>
		<property name="destinationName" value="fedora.apim.update"/>
		<property name="pubSubDomain" value="true"/>
		<property name="messageListener" ref="servicesMessageListener" />
		<property name="sessionTransacted" value="true"/>
	</bean>
	
	<bean id="cdrJmsContainer" class="org.springframework.jms.listener.DefaultMessageListenerContainer">
		<property name="connectionFactory" ref="jmsFactory"/>
		<property name="destinationName" value="repository.updates"/>
		<property name="pubSubDomain" value="true"/>
		<property name="messageListener" ref="cdrServicesMessageListener" />
		<property name="sessionTransacted" value="true"/>
	</bean>  
	
	<util:list id="servicesList" list-class="java.util.ArrayList" 
		value-type="edu.unc.lib.dl.cdr.services.ObjectEnhancementService">
		<ref bean="technicalMetadataEnhancementService"/>
		<ref bean="imageEnhancementService"/>
		<ref bean="thumbnailEnhancementService"/>
		<ref bean="solrUpdateEnhancementService"/>
	</util:list>
	
	<bean id="servicesFailedPids" class="edu.unc.lib.dl.cdr.services.model.FailedObjectHashMap">
	</bean>
	
	<bean id="servicesConductor" class="edu.unc.lib.dl.cdr.services.processing.ServicesConductor"
		init-method="init" destroy-method="destroy">
		<property name="services" ref="servicesList"/>
		<property name="maxThreads" value="${conductor.services.maxThreads}"/>
		<property name="recoverableDelay" value="${conductor.services.recoverableDelay}"/>
		<property name="unexpectedExceptionDelay" value="${conductor.services.unexpectedExceptionDelay}"/>
		<property name="beforeExecuteDelay" value="${conductor.services.beforeExecuteDelay}"/>
		<property name="failedPids" ref="servicesFailedPids"/>
	</bean>
	
	<bean id="solrUpdateConductor" class="edu.unc.lib.dl.cdr.services.processing.SolrUpdateConductor"
		init-method="init" destroy-method="destroy">
		<property name="fedoraDataService" ref="fedoraDataService" />
		<property name="updateDocTransformer" ref="updateDocTransformer" />
		<property name="solrDataAccessLayer" ref="solrDataAccessLayer" />
		<property name="solrSearchService" ref="solrSearchService" />
		<property name="maxThreads" value="${conductor.solr.maxThreads}" />
		<property name="recoverableDelay" value="${conductor.solr.recoverableDelay}"/>
		<property name="beforeExecuteDelay" value="${conductor.solr.beforeExecuteDelay}"/>
		<property name="accessGroups" ref="accessGroups" />
		<property name="searchSettings" ref="searchSettings" />
	</bean>
	
	<util:list id="messageConductorList" list-class="java.util.ArrayList" 
		value-type="edu.unc.lib.dl.cdr.services.processing.MessageConductor">
		<ref bean="servicesConductor"/>
		<ref bean="solrUpdateConductor"/>
	</util:list>
	
	<bean id="servicesMessageFilter" class="edu.unc.lib.dl.cdr.services.processing.ServicesQueueMessageFilter">
		<property name="services" ref="servicesList"/>
		<property name="servicesConductor" ref="servicesConductor"/>
	</bean>
	
	<bean id="solrUpdateMessageFilter" class="edu.unc.lib.dl.cdr.services.processing.SolrUpdateMessageFilter">
	</bean>
	
	<util:list id="messageFilterList" list-class="java.util.ArrayList" 
		value-type="edu.unc.lib.dl.cdr.services.processing.MessageFilter">
		<ref bean="servicesMessageFilter"/>
		<ref bean="solrUpdateMessageFilter"/>
	</util:list>
	
	<bean id="messageDirector" class="edu.unc.lib.dl.cdr.services.processing.MessageDirector">
		<property name="conductorsList" ref="messageConductorList"/>
		<property name="filters" ref="messageFilterList"/>
	</bean>
	
	<bean id="jmsMessageUtil" class="edu.unc.lib.dl.cdr.services.util.JMSMessageUtil">
	</bean>
	
	<bean id="cdrServicesMessageListener" class="edu.unc.lib.dl.cdr.services.processing.ServicesMessageListener">
		<property name="messageDirector" ref="messageDirector"/>
		<property name="messageNamespace" value="#{jmsMessageUtil.cdrMessageNamespace}"/>
	</bean>
	
	<bean id="servicesMessageListener" class="edu.unc.lib.dl.cdr.services.processing.ServicesMessageListener">
		<property name="messageDirector" ref="messageDirector"/>
		<property name="messageNamespace" value="#{jmsMessageUtil.fedoraMessageNamespace}"/>
	</bean>
		
	<bean id="catchUpService" class="edu.unc.lib.dl.cdr.services.processing.CatchUpService">
		<property name="servicesConductor" ref="servicesConductor"/>
		<property name="messageDirector" ref="messageDirector"/>
		<property name="services">
			<list>
				<ref bean="technicalMetadataEnhancementService"/>
				<ref bean="imageEnhancementService"/>
				<ref bean="thumbnailEnhancementService"/>
			</list>
		</property>
		<property name="active" value="false"/>
		<property name="enabled" value="true"/>
		<property name="pageSize" value="${catchup.pageSize}"/>
		<property name="catchUpCheckDelay" value="${catchup.catchUpCheckDelay}"/>
	</bean>
	
	<!-- Services -->
	<bean id="technicalMetadataEnhancementService" class="edu.unc.lib.dl.cdr.services.techmd.TechnicalMetadataEnhancementService">
		<property name="irodsAccount" ref="irodsAccount"/>
		<property name="irodsFileSystem" ref="irodsFileSystem"/>
		<property name="tripleStoreQueryService" ref="tripleStoreQueryService"/>
		<property name="managementClient" ref="managementClient"/>
		<property name="active" value="true"/>
	</bean>
	
	<bean id="imageEnhancementService" class="edu.unc.lib.dl.cdr.services.imaging.ImageEnhancementService">
		<property name="irodsAccount" ref="irodsAccount"/>
		<property name="irodsFileSystem" ref="irodsFileSystem"/>
		<property name="tripleStoreQueryService" ref="tripleStoreQueryService"/>
		<property name="managementClient" ref="managementClient"/>
		<property name="active" value="true"/>
	</bean>
	
	<bean id="thumbnailEnhancementService" class="edu.unc.lib.dl.cdr.services.imaging.ThumbnailEnhancementService">
		<property name="irodsAccount" ref="irodsAccount"/>
		<property name="irodsFileSystem" ref="irodsFileSystem"/>
		<property name="tripleStoreQueryService" ref="tripleStoreQueryService"/>
		<property name="managementClient" ref="managementClient"/>
		<property name="active" value="true"/>
	</bean>
	
	<bean id="solrUpdateEnhancementService" class="edu.unc.lib.dl.cdr.services.solr.SolrUpdateEnhancementService">
		<property name="solrDataAccessLayer" ref="solrDataAccessLayer" />
		<property name="tripleStoreQueryService" ref="tripleStoreQueryService"/>
		<property name="active" value="true"/>
	</bean>
	
	<bean id="embargoUpdateService" class="edu.unc.lib.dl.cdr.services.solr.EmbargoUpdateService">
		<property name="solrDataAccessLayer" ref="solrDataAccessLayer" />
		<property name="tripleStoreQueryService" ref="tripleStoreQueryService"/>
		<property name="active" value="true"/>
		<property name="windowSizeHours" value="${scheduled.embargoUpdate.windowHours}" />
	</bean>
	
	<bean id="solrJMXService" class="edu.unc.lib.dl.cdr.services.jmx.SolrJMXService">
		<property name="messageDirector" ref="messageDirector"/>
		<property name="active" value="true"/>
	</bean>
	
	<bean id="messageJMXService" class="edu.unc.lib.dl.cdr.services.jmx.MessageJMXService">
		<property name="messageDirector" ref="messageDirector"/>
		<property name="services" ref="servicesList"/>
	</bean>
	
	<!-- Scheduler -->

	<bean id="acCacheResetJobDetail" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject" ref="accessControlUtils" />
		<property name="targetMethod" value="cacheCleanupForCdrBasedAccessControl" />
	</bean>
	
	<bean id="acCacheResetCronTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean">
		<property name="jobDetail" ref="acCacheResetJobDetail" />
		<property name="cronExpression" value="${scheduled.acCacheReset.cron}" />
	</bean>
	
	<bean id="catchUpActivateJobDetail" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject" ref="catchUpService" />
		<property name="targetMethod" value="activate" />
	</bean>
	
	<bean id="catchUpDeactivateJobDetail" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject" ref="catchUpService" />
		<property name="targetMethod" value="deactivate" />
	</bean>
	
	<bean id="embargoJobDetail" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject" ref="embargoUpdateService" />
		<property name="targetMethod" value="updateEmbargoes" />
	</bean>
	
	<bean id="embargoCronTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean">
		<property name="jobDetail" ref="embargoJobDetail" />
		<property name="cronExpression" value="${scheduled.embargoUpdate.cron}" />
	</bean>
	
	<bean id="catchUpActivateCronTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean">
		<property name="jobDetail" ref="catchUpActivateJobDetail" />
		<property name="cronExpression" value="${scheduled.catchUpActivate.cron}" />
	</bean>
	
	<bean id="catchUpDeactivateCronTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean">
		<property name="jobDetail" ref="catchUpDeactivateJobDetail" />
		<property name="cronExpression" value="${scheduled.catchUpDeactivate.cron}" />
	</bean>
	
	<bean class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<property name="triggers">
			<list>
				<ref bean="embargoCronTrigger" />
				<ref bean="acCacheResetCronTrigger" />
				<ref bean="catchUpActivateCronTrigger" />
				<ref bean="catchUpDeactivateCronTrigger" />
			</list>
		</property>
		<property name="autoStartup">
			<value>true</value>
        </property>
		<property name="configLocation" value="classpath:quartz.properties"/>
	</bean>
	
	<!-- JMX -->

	<bean id="loggingExporter" class="org.springframework.jmx.export.MBeanExporter"
		lazy-init="false">
		<property name="beans">
			<map>
				<entry key="cdr-services:jmxservice=loggingConfiguration" value-ref="loggingMBean" />
			</map>
		</property>
		<property name="registrationBehaviorName" value="REGISTRATION_REPLACE_EXISTING"/>
		<property name="assembler">
			<bean class="org.springframework.jmx.export.assembler.InterfaceBasedMBeanInfoAssembler">
				<property name="managedInterfaces">
					<array value-type="java.lang.Class">
						<value>de.stefanheintz.log.jmxservice.LoggingConfig</value>
					</array>
				</property>				
			</bean>
		</property>
	</bean>

	<bean id="exporter" class="org.springframework.jmx.export.MBeanExporter"
		lazy-init="false">
		<property name="beans">
			<map>
				<entry key="cdr-services:name=messageJMXService" value-ref="messageJMXService" />
				<entry key="cdr-services:name=solrJMXService" value-ref="solrJMXService" />
				<entry key="cdr-services:name=servicesConductor" value-ref="servicesConductor" />
				<entry key="cdr-services:name=solrUpdateConductor" value-ref="solrUpdateConductor" />
				<entry key="cdr-services:name=fedoraDataService" value-ref="fedoraDataService" />
				<entry key="cdr-services:name=catchUpService" value-ref="catchUpService" />
				<entry key="cdr-services:name=technicalMetadataEnhancementService" value-ref="technicalMetadataEnhancementService" />
				<entry key="cdr-services:name=thumbnailEnhancementService" value-ref="thumbnailEnhancementService" />
				<entry key="cdr-services:name=solrUpdateEnhancementService" value-ref="solrUpdateEnhancementService" />
				<entry key="cdr-services:name=imageEnhancementService" value-ref="imageEnhancementService" />
			</map>
		</property>
		<property name="registrationBehaviorName" value="REGISTRATION_REPLACE_EXISTING"/>
	</bean>
	
	<!-- Logging MBean -->
	<!-- http://code.google.com/p/logging-jmx-service/wiki/Tutorial -->
	<bean id="loggingMBean" class="de.stefanheintz.log.jmxservice.LoggingConfigImpl">
	</bean>
	
	<!-- Solr ingest dependencies -->
	
	<bean id="updateDocTransformer" class="edu.unc.lib.dl.data.ingest.solr.UpdateDocTransformer"
		init-method="init">
		<property name="xslName" value="${addDocXslName}"/>
	</bean>
	
	<bean id="searchSettings" class="edu.unc.lib.dl.search.solr.util.SearchSettings">
		<property name="properties" ref="searchProperties" />
	</bean>
	<bean id="solrSettings" class="edu.unc.lib.dl.search.solr.util.SolrSettings">
		<property name="properties" ref="solrProperties" />
	</bean>
	<util:properties id="searchProperties" location="classpath:search.properties" />
	<util:properties id="solrProperties" location="classpath:solr.properties"
		local-override="true">
		<prop key="solr.path">${solr.protocol}://${solr.host}${solr.port}/${solr.context}</prop>
	</util:properties>

	<bean id="hierarchicalFacet" class="edu.unc.lib.dl.search.solr.model.HierarchicalFacet">
		<property name="searchSettings" ref="searchSettings" />
	</bean>

	<bean id="solrDataAccessLayer" class="edu.unc.lib.dl.data.ingest.solr.SolrDataAccessLayer"
		init-method="initializeSolrServer">
		<property name="solrSettings" ref="solrSettings"/>
	</bean>
	<bean id="solrSearchService" class="edu.unc.lib.dl.search.solr.service.SolrSearchService"
		init-method="initializeSolrServer">
		<property name="solrSettings" ref="solrSettings"/>
	</bean>
	<bean id="searchStateFactory" class="edu.unc.lib.dl.search.solr.service.SearchStateFactory">
		<property name="searchSettings" ref="searchSettings" />
	</bean>
	
	<bean id="accessGroupConstants" class="edu.unc.lib.dl.security.access.AccessGroupConstants">
		<property name="ADMIN_GROUP" value="${access.group.admin}"/>
	</bean>
	
	<util:set id="accessGroups" set-class="edu.unc.lib.dl.security.access.AccessGroupSet">
		<value>${access.group.admin}</value>
	</util:set>
</beans>
